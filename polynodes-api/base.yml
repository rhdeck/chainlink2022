service: ${self:custom.config.name}
useDotenv: true
provider:
  name: aws
  runtime: nodejs16.x
  memorySize: 1024
  timeout: 10
  iam:
    role:
      statements:
        - Effect: Allow
          Action: "*"
          Resource: "arn:aws:qldb:*:*:*"
        - Effect: "Allow"
          Action:
            - "lambda:InvokeFunction"
          Resource: "*"

  environment:
    stackName: "${self:custom.config.name}-${opt:stage, self:provider.stage, 'dev'}"
    DO_TOKEN: ${env:DO_TOKEN}
    ALCHEMY_MUMBAI_KEY: ${env:ALCHEMY_MUMBAI_KEY}
    ALCHEMY_POLYGON_KEY: ${env:ALCHEMY_POLYGON_KEY}
    BASE_URL:
      {
        "Fn::Join":
          [
            "",
            [
              " https://",
              { "Ref": "ApiGatewayRestApi" },
              ".execute-api.${self:custom.region}.amazonaws.com/${self:custom.stage}/",
            ],
          ],
      }
    ZAP_URL: ${env:ZAP_URL}
    internalKey: ${env:INTERNAL_KEY}
    COMPLETED_KEY: ${env:COMPLETE_KEY}
    ledgerName:
      Ref: QLDB
  layers:
    - "arn:aws:lambda:us-east-1:210049126456:layer:ssh2-lambda-layer:2"
plugins:
  - serverless-webpack
  - serverless-api-gateway-throttling
  - serverless-plugin-info-json
  - serverless-plugin-warmup
  - serverless-prune-plugin
  - serverless-dotenv-plugin
resources:
  Description: "Interface for Quantum Ledger API"
  Resources:
    QLDB:
      Type: "AWS::QLDB::Ledger"
      Properties:
        Name: "polynodesLedger"
        PermissionsMode: "STANDARD"
        DeletionProtection: ${self:custom.QLDB.deleteProtectionEnabled.${opt:stage, "dev"}, false}
custom:
  config: ${file(./config.json)}
  apiGatewayThrottling:
    maxRequestsPerSecond: 100
    maxConcurrentRequests: 50
  warmup:
    prewarm: true
    # role: MainRole
  prune:
    automatic: true
    number: 1
  webpack:
    includeModules: false
  stage: ${opt:stage, "dev"}
  region: ${opt:region, self:provider.region, "us-east-1"}
  QLDB:
    deleteProtectionEnabled:
      dev: false
      prod: true
      other: false
